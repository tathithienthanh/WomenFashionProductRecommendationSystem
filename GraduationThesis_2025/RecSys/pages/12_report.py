import streamlit as st
import pymysql
import pandas as pd
from datetime import datetime

# --- H√†m k·∫øt n·ªëi CSDL ---
def get_connection():
    return pymysql.connect(
        host="localhost",
        user="root",
        password="Abcxyz@123",
        database="eCommerce"
    )

# --- Ghi nh·∫≠t k√Ω ho·∫°t ƒë·ªông ---
def log_admin_activity(admin_id, activity):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            sql = "INSERT INTO ActivityLog (admin_id, activity) VALUES (%s, %s)"
            cursor.execute(sql, (admin_id, activity))
        conn.commit()
    finally:
        conn.close()

# --- Truy v·∫•n c√°c lo·∫°i b√°o c√°o ---
def report_top_selling_products():
    conn = get_connection()
    try:
        query = """
        SELECT product_name AS 'T√™n s·∫£n ph·∫©m', total_sold AS 'ƒê√£ b√°n', discounted_price AS 'Gi√°'
        FROM TopSellingProducts
        ORDER BY total_sold DESC
        LIMIT 10;
        """
        return pd.read_sql(query, conn)
    finally:
        conn.close()

def report_most_reviewed_products():
    conn = get_connection()
    try:
        query = """
        SELECT * FROM ProductReviewsSummary
        ORDER BY avg_rating	DESC
        LIMIT 10;
        """
        return pd.read_sql(query, conn)
    finally:
        conn.close()

def report_top_customers():
    conn = get_connection()
    try:
        query = """
        SELECT C.customer_id AS 'M√£ KH', C.first_name AS 'T√™n', C.last_name AS 'H·ªç',
               COUNT(O.order_id) AS 'S·ªë ƒë∆°n h√†ng', SUM(O.total_price) AS 'T·ªïng chi ti√™u'
        FROM Orders O
        JOIN Customer C ON O.customer_id = C.customer_id
        GROUP BY O.customer_id
        ORDER BY SUM(O.total_price) DESC
        LIMIT 10;
        """
        return pd.read_sql(query, conn)
    finally:
        conn.close()

# --- Giao di·ªán trang b√°o c√°o ---
st.title("üìä Trang B√°o C√°o Th·ªëng K√™")

# Ki·ªÉm tra ƒëƒÉng nh·∫≠p admin
if "admin_id" not in st.session_state:
    st.warning("‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p v·ªõi vai tr√≤ admin ƒë·ªÉ truy c·∫≠p trang n√†y.")
    st.stop()

st.success("Xin ch√†o admin!")

# B∆∞·ªõc 2: Hi·ªÉn th·ªã l·ª±a ch·ªçn lo·∫°i b√°o c√°o
report_type = st.selectbox("üìå Ch·ªçn lo·∫°i b√°o c√°o mu·ªën xem:", [
    "Top 10 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t",
    "Top 10 s·∫£n ph·∫©m ƒë∆∞·ª£c ƒë√°nh gi√° nhi·ªÅu nh·∫•t",
    "Top 10 kh√°ch h√†ng mua nhi·ªÅu nh·∫•t"
])

# B∆∞·ªõc 3 + 4: Hi·ªÉn th·ªã k·∫øt qu·∫£ truy xu·∫•t
if st.button("üì• Xem b√°o c√°o"):
    with st.spinner("ƒêang truy xu·∫•t d·ªØ li·ªáu..."):
        if report_type == "Top 10 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t":
            df = report_top_selling_products()
            log_admin_activity(st.session_state.admin_id, "Xem b√°o c√°o s·∫£n ph·∫©m b√°n ch·∫°y")
        elif report_type == "Top 10 s·∫£n ph·∫©m ƒë∆∞·ª£c ƒë√°nh gi√° nhi·ªÅu nh·∫•t":
            df = report_most_reviewed_products()
            log_admin_activity(st.session_state.admin_id, "Xem b√°o c√°o s·∫£n ph·∫©m ƒë√°nh gi√° nhi·ªÅu")
        else:
            df = report_top_customers()
            log_admin_activity(st.session_state.admin_id, "Xem b√°o c√°o kh√°ch h√†ng mua nhi·ªÅu")
        
        st.dataframe(df, use_container_width=True)
        
        st.session_state.current_report_df = df

# Hi·ªÉn th·ªã n√∫t xu·∫•t CSV b√™n ngo√†i ƒëi·ªÅu ki·ªán tr√™n
if 'current_report_df' in st.session_state:
    csv = st.session_state.current_report_df.to_csv(index=False).encode('utf-8')
    st.download_button(
        label="üíæ Xu·∫•t CSV",
        data=csv,
        file_name=f"{report_type}_{datetime.now().strftime('%Y%m%d')}.csv",
        mime='text/csv',
        help="T·∫£i b√°o c√°o d∆∞·ªõi d·∫°ng file CSV"
    )