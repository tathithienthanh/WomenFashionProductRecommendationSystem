import streamlit as st
import pymysql
import re
import random
import smtplib
from email.mime.text import MIMEText

# --- H√†m k·∫øt n·ªëi CSDL ---
def get_connection():
    return pymysql.connect(
        host="localhost",
        user="root",
        password="Abcxyz@123",
        database="eCommerce",
        cursorclass=pymysql.cursors.DictCursor
    )

# --- H√†m l·∫•y th√¥ng tin kh√°ch h√†ng ---
def get_customer_profile(customer_id):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            cursor.execute("SELECT * FROM customer WHERE customer_id = %s", (customer_id,))
            return cursor.fetchone()
    finally:
        conn.close()

# --- H√†m c·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng ---
def update_customer_info(customer_id, first_name, last_name, email, phone_number, address):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            sql = """
            UPDATE customer SET
                first_name = %s,
                last_name = %s,
                email = %s,
                phone_number = %s,
                address = %s
            WHERE customer_id = %s
            """
            cursor.execute(sql, (first_name, last_name, email, phone_number, address, customer_id))
        conn.commit()
    finally:
        conn.close()

# --- G·ª≠i email x√°c nh·∫≠n (gi·∫£ l·∫≠p) ---
def send_verification_email(email, code):
    # Gi·∫£ l·∫≠p g·ª≠i email b·∫±ng in m√£ x√°c nh·∫≠n (c√≥ th·ªÉ t√≠ch h·ª£p SMTP th·∫≠t)
    st.session_state.email_verification_code = code
    st.info(f"M√£ x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c g·ª≠i t·ªõi {email} (demo: m√£ l√† {code})")

# --- B·∫Øt ƒë·∫ßu giao di·ªán h·ªì s∆° ---
st.title("üë§ H·ªì s∆° kh√°ch h√†ng")

if "customer_id" not in st.session_state:
    st.warning("‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem h·ªì s∆°.")
    st.stop()

customer = get_customer_profile(st.session_state.customer_id)

if customer:
    st.subheader("Th√¥ng tin c√° nh√¢n")

    edit_mode = st.checkbox("‚úèÔ∏è C·∫≠p nh·∫≠t h·ªì s∆°")

    if not edit_mode:
        # --- Ch·∫ø ƒë·ªô xem ---
        st.text_input("M√£ kh√°ch h√†ng", customer["customer_id"], disabled=True)
        st.text_input("H·ªç", customer["last_name"], disabled=True)
        st.text_input("T√™n", customer["first_name"], disabled=True)
        st.text_input("Email", customer["email"], disabled=True)
        st.text_input("S·ªë ƒëi·ªán tho·∫°i", customer["phone_number"], disabled=True)
        st.text_area("ƒê·ªãa ch·ªâ", customer["address"], disabled=True)

    else:
        # --- Ch·∫ø ƒë·ªô ch·ªânh s·ª≠a ---
        new_last_name = st.text_input("H·ªç", customer["last_name"])
        new_first_name = st.text_input("T√™n", customer["first_name"])
        new_email = st.text_input("Email", customer["email"])
        new_phone = st.text_input("S·ªë ƒëi·ªán tho·∫°i", customer["phone_number"])
        new_address = st.text_area("ƒê·ªãa ch·ªâ", customer["address"])

        if st.button("üì® G·ª≠i m√£ x√°c nh·∫≠n"):
            if not re.match(r"[^@]+@[^@]+\.[^@]+", new_email):
                st.error("‚ùå Email kh√¥ng h·ª£p l·ªá.")
            else:
                # G·ª≠i m√£ x√°c nh·∫≠n (gi·∫£ l·∫≠p)
                verification_code = str(random.randint(100000, 999999))
                send_verification_email(new_email, verification_code)
                st.session_state.awaiting_verification = {
                    "last_name": new_last_name,
                    "first_name": new_first_name,
                    "email": new_email,
                    "phone_number": new_phone,
                    "address": new_address
                }

        # --- N·∫øu ƒë√£ g·ª≠i m√£ x√°c nh·∫≠n ---
        if "awaiting_verification" in st.session_state:
            st.success("üì© Vui l√≤ng nh·∫≠p m√£ x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n.")
            input_code = st.text_input("Nh·∫≠p m√£ x√°c nh·∫≠n")

            col1, col2 = st.columns(2)
            with col1:
                if st.button("‚úÖ X√°c nh·∫≠n"):
                    if input_code == st.session_state.get("email_verification_code", ""):
                        data = st.session_state.awaiting_verification
                        update_customer_info(
                            st.session_state.customer_id,
                            data["first_name"],
                            data["last_name"],
                            data["email"],
                            data["phone_number"],
                            data["address"]
                        )
                        st.success("‚úÖ C·∫≠p nh·∫≠t h·ªì s∆° th√†nh c√¥ng.")
                        del st.session_state.awaiting_verification
                        del st.session_state.email_verification_code
                        st.rerun()
                    else:
                        st.error("‚ùå M√£ x√°c nh·∫≠n kh√¥ng ƒë√∫ng. Vui l√≤ng th·ª≠ l·∫°i.")
            with col2:
                if st.button("üîÅ G·ª≠i l·∫°i m√£"):
                    new_code = str(random.randint(100000, 999999))
                    send_verification_email(new_email, new_code)
else:
    st.error("Kh√¥ng t√¨m th·∫•y th√¥ng tin kh√°ch h√†ng.")
