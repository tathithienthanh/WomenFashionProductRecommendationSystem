import streamlit as st
import pymysql
import pandas as pd

# --- H√†m k·∫øt n·ªëi CSDL ---
def get_connection():
    return pymysql.connect(
        host="localhost",
        user="root",
        password="Abcxyz@123",
        database="eCommerce",
        cursorclass=pymysql.cursors.DictCursor
    )

# --- L·∫•y t·∫•t c·∫£ tr·∫°ng th√°i ƒë∆°n h√†ng ---
def get_all_order_status():
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            cursor.execute("SELECT status_id, description FROM orderstatus")
            return cursor.fetchall()
    finally:
        conn.close()

# --- L·∫•y l·ªãch s·ª≠ ƒë∆°n h√†ng (c√≥ l·ªçc) ---
def get_order_history(customer_id, selected_status):
    conn = get_connection()
    try:
        with conn.cursor() as cursor:
            query = """
                SELECT 
                    o.order_id,
                    o.order_date,
                    o.shipped_date,
                    o.total_price,
                    os.description AS order_status,
                    p.description AS payment_method,
                    o.address,
                    o.note
                FROM orders o
                LEFT JOIN orderstatus os ON o.order_status = os.status_id
                LEFT JOIN payment p ON o.payment = p.payment_id
                WHERE o.customer_id = %s
            """
            params = [customer_id]

            if selected_status and selected_status != "T·∫•t c·∫£":
                query += " AND os.description = %s"
                params.append(selected_status)

            query += " ORDER BY o.order_date DESC"
            cursor.execute(query, params)
            return cursor.fetchall()
    finally:
        conn.close()

# --- Giao di·ªán ch√≠nh ---
st.title("üìú L·ªãch s·ª≠ mua h√†ng")

if "customer_id" not in st.session_state:
    st.warning("‚ö†Ô∏è Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ xem l·ªãch s·ª≠ ƒë∆°n h√†ng.")
    st.stop()

# --- L·ªçc theo tr·∫°ng th√°i ƒë∆°n h√†ng ---
statuses = get_all_order_status()
status_options = ["T·∫•t c·∫£"] + [s["description"] for s in statuses]
selected_status = st.selectbox("üìå L·ªçc theo tr·∫°ng th√°i ƒë∆°n h√†ng:", status_options)

orders = get_order_history(st.session_state.customer_id, selected_status)

# --- Hi·ªÉn th·ªã k·∫øt qu·∫£ ---
if orders:
    df = pd.DataFrame(orders)
    df["order_date"] = pd.to_datetime(df["order_date"]).dt.strftime("%d/%m/%Y %H:%M")
    df["shipped_date"] = df["shipped_date"].apply(
    lambda x: pd.to_datetime(x).strftime("%d/%m/%Y %H:%M") if pd.notnull(x) else "Ch∆∞a giao"
    )
    df.rename(columns={
        "order_id": "M√£ ƒë∆°n",
        "order_date": "Ng√†y ƒë·∫∑t",
        "shipped_date": "Ng√†y giao",
        "total_price": "T·ªïng ti·ªÅn",
        "order_status": "Tr·∫°ng th√°i",
        "payment_method": "Thanh to√°n",
        "address": "ƒê·ªãa ch·ªâ nh·∫≠n h√†ng",
        "note": "Ghi ch√∫"
    }, inplace=True)

    st.dataframe(df, use_container_width=True)
else:
    st.info("üì≠ Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o.")
