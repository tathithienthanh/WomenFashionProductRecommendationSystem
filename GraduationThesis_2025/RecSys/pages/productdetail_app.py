import streamlit as st
import pymysql

# --- K·∫øt n·ªëi DB ---
def get_connection():
    return pymysql.connect(
        host="localhost",
        user="root",
        password="Abcxyz@123",
        database="eCommerce",
        cursorclass=pymysql.cursors.DictCursor
    )

# --- L·∫•y danh s√°ch s·∫£n ph·∫©m ---
def get_all_products():
    conn = get_connection()
    with conn.cursor() as cursor:
        cursor.execute("SELECT product_id, name FROM Product")
        return cursor.fetchall()

# --- L·∫•y chi ti·∫øt s·∫£n ph·∫©m ---
def get_product_detail(product_id):
    conn = get_connection()
    with conn.cursor() as cursor:
        cursor.execute("SELECT * FROM Product WHERE product_id = %s", (product_id,))
        product = cursor.fetchone()

        cursor.execute("""
            SELECT c.description 
            FROM ProductHasCategories pc 
            JOIN Category c ON pc.category_id = c.category_id 
            WHERE pc.product_id = %s
        """, (product_id,))
        categories = [row["description"] for row in cursor.fetchall()]
    conn.close()
    return product, categories

# --- Th√™m v√†o gi·ªè h√†ng ---
def add_to_cart(customer_id, product_id, quantity=1):
    conn = get_connection()
    with conn.cursor() as cursor:
        # Ki·ªÉm tra ƒë√£ c√≥ trong gi·ªè ch∆∞a
        cursor.execute("""
            SELECT quantity FROM Cart 
            WHERE customer_id = %s AND product_id = %s
        """, (customer_id, product_id))
        existing = cursor.fetchone()

        if existing:
            new_quantity = existing["quantity"] + quantity
            cursor.execute("""
                UPDATE Cart SET quantity = %s 
                WHERE customer_id = %s AND product_id = %s
            """, (new_quantity, customer_id, product_id))
        else:
            cursor.execute("""
                INSERT INTO Cart (customer_id, product_id, quantity) 
                VALUES (%s, %s, %s)
            """, (customer_id, product_id, quantity))

    conn.commit()
    conn.close()

# --- Giao di·ªán ---
st.title("üì¶ Chi ti·∫øt s·∫£n ph·∫©m")

product_list = get_all_products()
product_options = {f"{p['name']} ({p['product_id']})": p['product_id'] for p in product_list}

selected = st.selectbox("Ch·ªçn s·∫£n ph·∫©m", options=list(product_options.keys()))

if selected:
    product_id = product_options[selected]
    product, categories = get_product_detail(product_id)

    st.image(product["image_url"], width=250)
    st.markdown(f"### üõçÔ∏è {product['name']}")
    st.markdown(f"**M√¥ t·∫£:** {product['description']}")
    st.markdown(f"**Gi√°:** üí∏ {product['price']:,} ƒë")
    if product["discount"]:
        st.markdown(f"**Gi·∫£m gi√°:** {product['discount']}%")
    st.markdown(f"**S·ªë l∆∞·ª£ng c√≤n:** {product['quantity']}")
    st.markdown(f"**ƒê√£ b√°n:** {product['sold']}")
    st.markdown(f"**ƒê√°nh gi√°:** ‚≠ê {product['rating']}/5")

    if categories:
        st.markdown("**Danh m·ª•c:** " + ", ".join(categories))
    else:
        st.markdown("**Danh m·ª•c:** (Kh√¥ng c√≥)")

    # N√∫t th√™m v√†o gi·ªè
    if st.button("üõí Th√™m v√†o gi·ªè h√†ng"):
        if "customer_id" not in st.session_state or st.session_state["customer_id"] is None:
            st.warning("üîí Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng.")
        else:
            add_to_cart(st.session_state["customer_id"], product_id)
            st.success("‚úÖ ƒê√£ th√™m v√†o gi·ªè h√†ng!")
